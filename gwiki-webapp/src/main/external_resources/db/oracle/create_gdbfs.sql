
CREATE TABLE TB_BASE_GVFS
(
  BASE_GVFS               NUMBER(10) not null,
  FSNAME                 	VARCHAR2(32) not null,
  NAME               			NVARCHAR2(1024) not null,
  TYPE										CHAR not null,
  DATAENC									VARCHAR2(2) not null,
  MIMETYPE								VARCHAR2(50), 
  PARENT									NUMBER(10),
  LENGTH									NUMBER(10),
  ATTRIBUTES							VARCHAR2(1024), 
  DATACOL0               	VARCHAR2(4000),
  CREATEDAT              	TIMESTAMP DEFAULT SYSTIMESTAMP,
  CREATEDBY              	VARCHAR2(30) DEFAULT USER,
  MODIFIEDAT             	TIMESTAMP DEFAULT SYSTIMESTAMP,
  MODIFIEDBY             	VARCHAR2(30) DEFAULT USER,
  UPDATECOUNTER          	NUMBER(10) default 0
)
PCTUSED    0
PCTFREE    10
INITRANS   2
MAXTRANS   255
NOCACHE
NOPARALLEL
NOMONITORING;




create sequence SQ_BASE_GVFS
/

---------------------------------------------------------------------------
--- Trigger anlegen
---------------------------------------------------------------------------
CREATE OR REPLACE TRIGGER TR_BASE_GVFS_PK BEFORE INSERT
ON TB_BASE_GVFS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
  IF :NEW.BASE_GVFS is null then
    select SQ_BASE_GVFS.nextval into :NEW.BASE_GVFS from dual; 
  END IF;
END;
/



CREATE OR REPLACE TRIGGER TR_BASE_GVFS_MODIFIED BEFORE UPDATE
ON TB_BASE_GVFS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
  IF :NEW.MODIFIEDAT is null or :NEW.MODIFIEDAT = :OLD.MODIFIEDAT then
    :NEW.MODIFIEDAT := SYSTIMESTAMP;
  END IF;
  IF :NEW.UPDATECOUNTER is null or :NEW.UPDATECOUNTER = :OLD.UPDATECOUNTER then
    if (:OLD.UPDATECOUNTER = 9999999999) then
      :NEW.UPDATECOUNTER := 0;
     else
      :NEW.UPDATECOUNTER := NVL(:OLD.UPDATECOUNTER, 0) + 1;
    end if;
  END IF;
   IF :NEW.modifiedby IS NULL
   THEN
      :NEW.modifiedby := USER;
   END IF;
END;
/

create or replace view VW_BASE_GVFS as select * from TB_BASE_GVFS;

ALTER TABLE TB_BASE_GVFS ADD (
  CONSTRAINT TB_BASE_GVFS_PK 
 PRIMARY KEY
 (BASE_GVFS)
    USING INDEX 
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
);



CREATE INDEX IX_TB_BASE_GVFS_MOD
ON TB_BASE_GVFS
(MODIFIEDAT)
LOGGING
;

CREATE UNIQUE INDEX IX_TB_BASE_GVFS_NAME 
ON TB_BASE_GVFS
(FSNAME, NAME) 
PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
LOGGING
COMPRESS 1
;

CREATE INDEX IX_TB_BASE_GVFS_PARENT 
ON TB_BASE_GVFS
(FSNAME, PARENT) 
PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
LOGGING
COMPRESS 1
;

CREATE TABLE TB_BASE_GVFS_DATA
(
  BASE_GVFS_DATA           NUMBER(10) not null,
  BASE_GVFS                NUMBER(10) not null,
  DATAROW                     NUMBER(10) not null,
  DATACOL1                    VARCHAR2(4000),
  CREATEDAT              TIMESTAMP DEFAULT SYSTIMESTAMP,
  CREATEDBY              VARCHAR2(30) DEFAULT USER,
  MODIFIEDAT             TIMESTAMP DEFAULT SYSTIMESTAMP,
  MODIFIEDBY             VARCHAR2(30) DEFAULT USER,
  UPDATECOUNTER          NUMBER(10) default 0
)
NOCACHE
NOPARALLEL
NOMONITORING;


ALTER TABLE TB_BASE_GVFS_DATA ADD (
  CONSTRAINT TB_BASE_GVFS_DATA_PK 
 PRIMARY KEY
 (BASE_GVFS_DATA)
    USING INDEX 
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
);


ALTER TABLE TB_BASE_GVFS_DATA ADD (
  CONSTRAINT TB_BASE_GVFS_DATA_FK1 
 FOREIGN KEY (BASE_GVFS) 
 REFERENCES TB_BASE_GVFS (BASE_GVFS));


create sequence SQ_BASE_GVFS_DATA
/

---------------------------------------------------------------------------
--- trigger anlegen
---------------------------------------------------------------------------
CREATE OR REPLACE TRIGGER TR_BASE_GVFS_DATA_PK BEFORE INSERT
ON TB_BASE_GVFS_DATA
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
  IF :NEW.BASE_GVFS_DATA is null then
    select SQ_BASE_GVFS_DATA.nextval into :NEW.BASE_GVFS_DATA from dual; 
  END IF;
END;
/

create or replace view VW_BASE_GVFS_DATA as select * from TB_BASE_GVFS_DATA;

CREATE OR REPLACE TRIGGER TR_BASE_GVFS_DATA_MODIFIED BEFORE UPDATE
ON TB_BASE_GVFS_DATA
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
  IF :NEW.MODIFIEDAT is null or :NEW.MODIFIEDAT = :OLD.MODIFIEDAT then
    :NEW.MODIFIEDAT := SYSTIMESTAMP;
  END IF;
  IF :NEW.UPDATECOUNTER is null or :NEW.UPDATECOUNTER = :OLD.UPDATECOUNTER then
    if (:OLD.UPDATECOUNTER = 9999999999) then
      :NEW.UPDATECOUNTER := 0;
     else
      :NEW.UPDATECOUNTER := NVL(:OLD.UPDATECOUNTER, 0) + 1;
    end if;
  END IF;
   IF :NEW.modifiedby IS NULL
   THEN
      :NEW.modifiedby := USER;
   END IF;
END;
/


CREATE INDEX IX_TB_BASE_GVFS_DATA_MOD
ON TB_BASE_GVFS_DATA
(MODIFIEDAT)
LOGGING
;

CREATE INDEX IX_TB_BASE_GVFS_DATA_UK2
ON TB_BASE_GVFS_DATA
(BASE_GVFS)
LOGGING
;

commit;
